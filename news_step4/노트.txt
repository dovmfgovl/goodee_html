ajax.open('GET', TITLE_URL, false);
ajax.send();
//타입을 언제 결정하나? 런타임(실행) 시 결정됨 -> true주면 boolean, 1 주면 정수, 0.5 주면 실수로 결정됨
//NodeJS -> 넷플릭스 -> TypeScript(타입체크를 함, 객체지향 표방, c#)
//자바스크립트에서는 함수도 객체이다. - 고차함수, 일급객체,
function getData(url){ //js, html은 url 앞에 타입을 적어주지 않음 - 컴파일(문법체크-타입체크)을 안함
ajax.open('GET', url, false);
ajax.send(); //서버 측에 요청을 보내고 응답을 기다리는 중...
return JSON.parse(ajax.response);
}
ES6 - 모듈화 지원 - 클래스 쪼개기 가능해짐 + 번들러 : 여러 개 파일을 한 몸처럼 만들어주는 것(parcel) 
-> <arrow function으로 바꾸자>
    1. function 생략하자
    2. 함수명 = (파라미터 자리 - 빈깡통도 합법) => {//괄호 없어도 함수 호출됨. js에서는 함수도 객체니까
        실행문(변수선언, 재정의, 제어문)
      }

      ****자바와의 차이 : 함수 이름을 변수처럼 사용가능하다****
      타입이 있지만 런타임 시 결정됨
      또 컴파일이 없음 - 문법체크를 안함 그래서 독이 될 수도 있다
      getData = (url) => {
        return JSON.parse(ajax.response); //JSON -> Array
      }

다음은 위치 결정(기준이 있다)하기.
: 절차지향적이다. -> 순서도대로 최대한 처리해볼 수 있는 언어
(<-> 구조지향적이다. - 자바는 메소드 순서가 뒤죽박죽이어도 잘 호출됨)
선언이 먼저다. 사용보다

파라미터를 결정한다. - 사용자가 입력한 값을 담는다.
응답을 담는다 - 리턴타입

실행되는 순서대로 코드 나열하기

개선 코드 1단계 - 반복되는 코드를 줄이자
  어떻게? - 함수 선언하자
  해커뉴스 서버에 뉴스정보를 요청할 떄 사용함 -> 응답(Array 30)을 기다림
  리턴값을 받을 수 있는 코드 추가됨
  해커뉴스가 응답으로 JSON 포맷으로 데이터셋을 준다.
  const ajax = new XMLHttpRequest(); //ajax.open(), ajax.send()
  브라우저는 마임타입으로 널 알아본다.
  JSON(mime type: application/json image/png image/jpg image/gif text/javascript text/css) -> Array => JSON.parse(ajax.response)
  function 함수명(){ return }