1. router(라우팅) - Web Service - Web3.0
: 화면갱신, 페이지변화(이동-새로고침, 깜빡임, 유지{{상태관리-보안 -> 쿠키와 세션}} 안됨)

2. 데이터 영속성 - 오라클, MySQL(Firebase-데이터베이스 -> 통합서비스), NoSQL(경량화 - 안드로이드, iOS) => 하이브리드
: 게시판 구현 - CRUD포함

<메뉴 추가>
게시판,  Youtube검색, 영화검색,....

라우터 등록하기
routes
- index.js : 게시판, 유튜브, 영화서비스,..., 장바구니(쿠키와 세션 관련 - 전자결제, 회계솔루션,,,)
- users.js : 대시보드

views - Front-End -> jsp, Vue.js, Reactjs, 넥사크로, UI솔루션

--👉board 폴더--
게시판 - list.js, write.js, update.js, delete.js, chat.js(데이터베이스 - 데이터영속성 누림 - 스레드 없어도 됨 - 데이테 안에는 시간 포함되어 있으므로, 동기화)

--👉users 폴더 - 대시보드--
cart.js, join.js, mypage.js, update.js

--👉auth 폴더 --
소셜로그인 처리해보자(카카오로그인, 네이버로그인 도전 - 백엔드 만짐)

➡️client side 
  - html, css, js(NodeJS- 모듈화, 외부 라이브러리 이용과 관련된 표준화 작업(firebase의 storage만 쓸건가, 다른 것도 쓸건가 등...))
➡️server side 
  - Spring, jsp는 버린다면 -> ReactJs, UI솔루션 등 고민

<서비스 오픈>
도메인 + 외부 IP 필요(211.120.56.45:8000)
AWS, 서버제품 필요 - 배치, 배포(빌드 - 클라이언트측(번들러(파셀), 웹팩), 서버측(메이븐, 그레이들))

🔽[작업지시서]🔽
1. 메뉴에 추가하기
  - 디폴트로 보여지는 메뉴

  - 인증 후에만 볼 수 있는 메뉴가 있다.
      ex) 카트, 회원정보수정

2. 게시판 구현하기
  - 기본기능 
    : 입력, 수정, 삭제, 조건조회
  - 기능 추가 
    : 좋아요

--화면은 어떻게 조립되고 있나요?--
  - html에는 include가 없다 : 조립