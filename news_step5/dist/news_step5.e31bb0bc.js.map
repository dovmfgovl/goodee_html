{"version":3,"sources":["index.js"],"names":["ajax","XMLHttpRequest","TITLE_URL","container","document","getElementById","content","createElement","CONTENT_URL","getData","url","open","send","JSON","parse","response","newsList","console","log","ul","window","addEventListener","event","id","location","hash","substring","ncontent","replace","innerHTML","concat","title","newsPage","push","i","comments_count","join"],"mappings":"AAAA,IAAMA,IAAI,GAAG,IAAIC,cAAc,CAAC,CAAC;AACjC,IAAMC,SAAS,GAAG,sCAAsC;AACxD,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,IAAMC,OAAO,GAAGF,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;AAC7C;AACA,IAAMC,WAAW,GAAG,wCAAwC;AAE5DC,OAAO,GAAG,SAAAA,QAACC,GAAG,EAAK;EACjBV,IAAI,CAACW,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,KAAK,CAAC;EAC5BV,IAAI,CAACY,IAAI,CAAC,CAAC;EACX,OAAOC,IAAI,CAACC,KAAK,CAACd,IAAI,CAACe,QAAQ,CAAC;AAClC,CAAC;AAED,IAAMC,QAAQ,GAAGP,OAAO,CAACP,SAAS,CAAC;AACnCe,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;AACrB,IAAMG,EAAE,GAAGf,QAAQ,CAACG,aAAa,CAAC,IAAI,CAAC;AAEvCa,MAAM,CAACC,gBAAgB,CAAC,YAAY,EAAE,UAACC,KAAK,EAAK;EAC/C;EACA,IAAMC,EAAE,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;EACrC,IAAMC,QAAQ,GAAGlB,OAAO,CAACD,WAAW,CAACoB,OAAO,CAAC,KAAK,EAAEL,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE1DpB,SAAS,CAAC0B,SAAS,cAAAC,MAAA,CACbH,QAAQ,CAACI,KAAK,qEAEnB;AACH,CAAC,CAAC;AACF;AACA;AACA,IAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;AACrBA,QAAQ,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC3B;EACAF,QAAQ,CAACC,IAAI,kCAAAH,MAAA,CAEKd,QAAQ,CAACkB,CAAC,CAAC,CAACX,EAAE,mBAAAO,MAAA,CACxBd,QAAQ,CAACkB,CAAC,CAAC,CAACH,KAAK,OAAAD,MAAA,CAAId,QAAQ,CAACkB,CAAC,CAAC,CAACC,cAAc,iCAGtD,CAAC;AACJ,CAAC,CAAC;AACFH,QAAQ,CAACC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA9B,SAAS,CAAC0B,SAAS,GAAGG,QAAQ,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"news_step5.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const ajax = new XMLHttpRequest();\r\nconst TITLE_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst container = document.getElementById('root');\r\nconst content = document.createElement('div');\r\n//@id로 된 부분을 JSON 포맷파일에서 id값을 읽어와 치환해야 함\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\n\r\ngetData = (url) => {\r\n  ajax.open('GET', url, false);\r\n  ajax.send();\r\n  return JSON.parse(ajax.response);\r\n};\r\n\r\nconst newsList = getData(TITLE_URL);\r\nconsole.log(newsList);\r\nconst ul = document.createElement('ul');\r\n\r\nwindow.addEventListener('hashchange', (event) => {\r\n  //location.hash -> #33899902 //내장객체 location의 속성인 hash\r\n  const id = location.hash.substring(1);\r\n  const ncontent = getData(CONTENT_URL.replace('@id', id)); //@id로 된 부분을 JSON 포맷파일에서 id값을 읽어와 치환하는 replace\r\n\r\n  container.innerHTML = `\r\n  <h1>${ncontent.title}</h1>\r\n  <div><a href='#'>목록으로</a></div>\r\n  `;\r\n});\r\n//배열 선언하기 - 뉴스목록을 배열에 담아서 한 번에 root안에 집어넣기\r\n//append로 추가하지 말고 새로고침이 된 것 처럼 덮어쓴다.\r\nconst newsPage = []; //배열 선언\r\nnewsPage.push('<ul>'); //열린 태그가 있다면 닫힌 태그도 필요 //ul태그는 한번만 실행하면 됨. 따라서 for문 밖에서\r\nfor (let i = 0; i < 10; i++) {\r\n  //# 붙여야 hashchange 이벤트 발동됨\r\n  newsPage.push(`\r\n    <li>\r\n      <a href = '#${newsList[i].id}'> \r\n        ${newsList[i].title}(${newsList[i].comments_count})\r\n      </a>\r\n    </li>\r\n  `);\r\n} //end of for\r\nnewsPage.push('</ul>'); //닫힌 태그\r\n/*\r\n  join : 배열 자체를 하나의 문자열로 합치는 기능을 배열이 제공\r\n  join 함수를 그대로 호출하면 배열 요소에 있는 요소들을 하나의 문자열로 합쳐주는데\r\n  그것들을 콤마라고 하는 문자열로 구분자를 넣어준다 - 디폴트가 콤마\r\n  그런데 여기서는 필요 없어서 구분자 역할을 빈문자열로 대신 함.\r\n*/\r\ncontainer.innerHTML = newsPage.join(''); //하나로 합쳐주는 메소드 join\r\n\r\n/*\r\n  DOM API를 사용하여 페이지를 그렸더니 직관적(DOM TREE)이지 않아서\r\n  유지보수하는데 불편할 것 같다.\r\n  이것을 개선하고 싶은데 그렇게 하려면 오히려 DOM API를 사용하지 않아야겠다.\r\n  대신 문자열을 이용해서 태그를 이어 붙이면 코드 양은 늘어나지만\r\n  오히려 복잡도는 낮출 수도 있지 않나?\r\n  전체적인 구조를 좀 바꿔볼까?\r\n  createElement, appendChild 가능한 다 걷어내자.\r\n*/\r\n"]}